[{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dawar.aleksanderbl.dk/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dawar.aleksanderbl.dk/articles/dawaR.html","id":"getting-regional-data-for-denmark","dir":"Articles","previous_headings":"","what":"Getting regional data for Denmark","title":"Getting Started","text":"get dataframe regions Denmark, can use get_data() function. return data five regions.","code":"get_data(\"regioner\") #>   dagi_id kode               navn nuts2                   ændret #> 1  389098 1081 Region Nordjylland  DK05 2024-10-04T21:02:54.978Z #> 2  389101 1082 Region Midtjylland  DK04 2024-10-11T21:03:05.131Z #> 3  389102 1083  Region Syddanmark  DK03 2024-10-04T21:02:54.978Z #> 4  389099 1084 Region Hovedstaden  DK01 2024-10-04T21:02:54.978Z #> 5  389100 1085    Region Sjælland  DK02 2024-10-22T21:04:04.354Z #>                 geo_ændret geo_version bbox_xmin bbox_ymin bbox_xmax bbox_ymax #> 1 2024-10-04T21:02:54.978Z          32  8.189517  56.53455  11.22599  57.76025 #> 2 2024-10-11T21:03:05.131Z          43  8.078876  55.64438  11.66419  56.84326 #> 3 2024-10-04T21:02:54.978Z          32  8.063203  54.71828  10.99555  55.95325 #> 4 2024-10-04T21:02:54.978Z          31 11.602116  54.98355  15.31831  56.20520 #> 5 2024-10-22T21:04:04.354Z          29 10.814805  54.54441  12.64552  56.01731 #>   visueltcenter_x visueltcenter_y #> 1       10.112829        57.30716 #> 2        9.605032        56.23399 #> 3        9.028461        55.56317 #> 4       12.279374        55.97239 #> 5       11.621319        55.43979"},{"path":"https://dawar.aleksanderbl.dk/articles/dawaR.html","id":"using-dawa-to-crosstab-municipalities-and-their-regions-","dir":"Articles","previous_headings":"Getting regional data for Denmark","what":"Using DAWA to crosstab municipalities and their regions.","title":"Getting Started","text":"function get_data() fetches data json format default transforms data.frame. extracted municipalities “Region Nordjylland”. can done voting precincts police regions. can also done addresses others. Look available sections available_sections().","code":"library(dawaR) library(dplyr)  municipalities <- get_data(\"kommuner\")  nordjylland <- municipalities |>   filter(regionsnavn == \"Region Nordjylland\") |>   pull(navn)  nordjylland #>  [1] \"Morsø\"           \"Thisted\"         \"Brønderslev\"     \"Frederikshavn\"   #>  [5] \"Vesthimmerlands\" \"Læsø\"            \"Rebild\"          \"Mariagerfjord\"   #>  [9] \"Jammerbugt\"      \"Aalborg\"         \"Hjørring\""},{"path":"https://dawar.aleksanderbl.dk/articles/dawaR.html","id":"using-dawa-map-data","dir":"Articles","previous_headings":"Getting regional data for Denmark","what":"Using DAWA map data","title":"Getting Started","text":"function get_map_data() fetches data geojson format transforms geometries sf polygons. polygons can drawn nice maps ggplot2.  information plot maps dawaR please consult vignette(\"printing_maps\").","code":"library(dawaR) library(ggplot2)  municipalities <- get_map_data(\"kommuner\") ggplot(municipalities, aes(fill = regionsnavn)) +   geom_sf(color = \"black\") +   labs(fill = \"Region\") +   cowplot::theme_map()"},{"path":"https://dawar.aleksanderbl.dk/articles/printing_maps.html","id":"getting-map-data","dir":"Articles","previous_headings":"","what":"Getting map data","title":"Printing maps with dawaR and ggplot2","text":"loading required packages need get map data. request map data (98) danish municipalities. danish word municipality kommune request. dropdown can see head() data received. data can passed ggplot2::geom_sf() print map. also specified fill color based municipality name make bit colorful.","code":"municipalities <- get_map_data(\"kommuner\") #> Simple feature collection with 6 features and 11 fields   #> Geometry type: MULTIPOLYGON   #> Dimension:     XY   #> Bounding box:  xmin: 12.2635 ymin: 55.53633 xmax: 12.73425 ymax: 55.77944   #> Geodetic CRS:  WGS 84   #>   dagi_id kode          navn regionskode udenforkommuneinddeling   #> 1  389103 0101     København        1084                   FALSE   #> 2  389104 0147 Frederiksberg        1084                   FALSE   #> 3  389105 0151      Ballerup        1084                   FALSE   #> 4  389106 0153       Brøndby        1084                   FALSE   #> 5  389107 0155        Dragør        1084                   FALSE   #> 6  389108 0157      Gentofte        1084                   FALSE   #>          regionsnavn              ændret          geo_ændret geo_version   #> 1 Region Hovedstaden 2024-10-04 21:02:54 2024-10-04 21:02:54          21   #> 2 Region Hovedstaden 2024-01-16 22:03:35 2024-01-16 22:03:35           7   #> 3 Region Hovedstaden 2024-10-04 21:02:54 2024-10-04 21:02:54           7   #> 4 Region Hovedstaden 2024-01-10 22:10:55 2024-01-10 22:10:55           7   #> 5 Region Hovedstaden 2023-03-24 22:28:38 2023-03-24 22:28:38           3   #> 6 Region Hovedstaden 2024-10-04 21:02:54 2024-10-04 21:02:54           7   #>   visueltcenter_x visueltcenter_y                       geometry   #> 1        12.49391        55.70409 MULTIPOLYGON (((12.56767 55...   #> 2        12.52373        55.67937 MULTIPOLYGON (((12.53735 55...   #> 3        12.36852        55.72707 MULTIPOLYGON (((12.30407 55...   #> 4        12.40438        55.64504 MULTIPOLYGON (((12.44279 55...   #> 5        12.65023        55.59381 MULTIPOLYGON (((12.64513 55...   #> 6        12.55072        55.75098 MULTIPOLYGON (((12.59175 55... ggplot(municipalities, aes(fill = navn)) +   geom_sf() +   cowplot::theme_map() +   theme(legend.position = \"none\")"},{"path":"https://dawar.aleksanderbl.dk/articles/printing_maps.html","id":"drawing-maps-with-many-lines","dir":"Articles","previous_headings":"","what":"Drawing maps with many lines","title":"Printing maps with dawaR and ggplot2","text":"example resource intensive. Trying plot danish voting precincts hand, somewhat intensive. ease production maps, now demonstrate easy simplify lines (without loss substantial quality) faster plot map. use rmapshaper::ms_simplify() function . First get data get_map_data() provide afstemningsomraader (voting areas) type. let’s quickly examine many polygons now draw. printed amount polygons municipality level well voting precinct level. plot polygons takes substantial amount time - can either just trust try finishing article! accommodate larger number polygons simplify lines make said polygons. simplifying data can now plot .  , colored shapes based municipality turned lines shape different color based voting precincts name.","code":"voting <- get_map_data(\"afstemningsomraader\") nrow(municipalities) #> [1] 99 nrow(voting) #> [1] 1308 voting_simplified <- rmapshaper::ms_simplify(   voting,   keep = 0.01,   keep_shapes = TRUE ) ggplot(voting_simplified, aes(fill = kommunenavn, color = navn)) +   geom_sf() +   cowplot::theme_map() +   theme(legend.position = \"none\")"},{"path":"https://dawar.aleksanderbl.dk/articles/printing_maps.html","id":"overlaying-multiple-maps","dir":"Articles","previous_headings":"","what":"Overlaying multiple maps","title":"Printing maps with dawaR and ggplot2","text":"like plot different municipalities distributed police regions can simply get data maps pass dataset/geom combos ggplot2. can pass ggplot2 follows.  can see, now produced map shapes different subsections Denmark.","code":"police <- get_map_data(\"politikredse\") # We will reuse the municipality data from earlier. ggplot() +   geom_sf(     data = police,     aes(fill = navn),     color = NA   ) +   geom_sf(     data = municipalities,     color = \"black\",     fill = NA   ) +   cowplot::theme_map() +   theme(legend.position = \"none\")"},{"path":"https://dawar.aleksanderbl.dk/articles/status.html","id":"use-status_check-to-assert-whether-the-services-are-available","dir":"Articles","previous_headings":"","what":"Use status_check() to assert whether the services are available","title":"Checking the API status","text":"status_check() built provide simple cli response R console current status API. also possible return dataframe specifying individual status service provided government entity maintains DAWA. particularly useful like use analyses. can also use status_check(error_if_unavailable = TRUE) test stop script one services currently unavailable.","code":"status_check() #> ✔ All systems are operational status_check(return_df = TRUE) #> ✔ All systems are operational #>              service status #> 1           Adresser     OK #> 2         Arkiv kort     OK #> 3 Dataforsyningen.dk     OK #> 4               FTPS     OK #> 5            Gsearch     OK #> 6 WMS - forvaltning2     OK #> 7        sdfekort.dk     OK"},{"path":"https://dawar.aleksanderbl.dk/articles/status.html","id":"dawa-will-be-phased-out","dir":"Articles","previous_headings":"","what":"DAWA will be phased out","title":"Checking the API status","text":"government entity maintains Danish Web Address API disclosed API phased point. time comes, package become deprecated another package ready provide functionality. service replace DAWA called Datafordeleren (Data Distribution) works. functionality relation Central Register Buildings (BBR) already moved new service. know read danish (use machine-translation) can keep date page. worries! sound like shutdown DAWA happen anytime soon without due notice. updates written .","code":""},{"path":"https://dawar.aleksanderbl.dk/articles/status.html","id":"change-history","dir":"Articles","previous_headings":"DAWA will be phased out","what":"Change history","title":"Checking the API status","text":"Central Register Buildings moved effective: 03-April-2024","code":""},{"path":"https://dawar.aleksanderbl.dk/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aleksander Bang-Larsen. Author, maintainer, copyright holder.","code":""},{"path":"https://dawar.aleksanderbl.dk/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bang-Larsen (2024). dawaR: API Wrapper Package DAWA - Danish Address Web API. R package version 0.1.0, https://github.com/aleksanderbl29/dawaR, https://dawar.aleksanderbl.dk/.","code":"@Manual{,   title = {dawaR: An API Wrapper Package for DAWA - The Danish Address Web API},   author = {Aleksander Bang-Larsen},   year = {2024},   note = {R package version 0.1.0, https://github.com/aleksanderbl29/dawaR},   url = {https://dawar.aleksanderbl.dk/}, }"},{"path":"https://dawar.aleksanderbl.dk/index.html","id":"dawar-","dir":"","previous_headings":"","what":"An API Wrapper Package for DAWA - The Danish Address Web API","title":"An API Wrapper Package for DAWA - The Danish Address Web API","text":"goal dawaR make access Danish Web Address API convenient many users.","code":""},{"path":"https://dawar.aleksanderbl.dk/index.html","id":"to-do-before-cran-submission","dir":"","previous_headings":"","what":"TO DO before CRAN-submission","title":"An API Wrapper Package for DAWA - The Danish Address Web API","text":"basically wrappers functions package provide another level convenience non-technical users.","code":""},{"path":"https://dawar.aleksanderbl.dk/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An API Wrapper Package for DAWA - The Danish Address Web API","text":"can install development version dawaR GitHub : install package environment configured renv MacOS, please consult vignette(\"renv-issues\") ensure get_map_data() works intended.","code":"# install.packages(\"devtools\") devtools::install_github(\"aleksanderbl29/dawaR\")"},{"path":"https://dawar.aleksanderbl.dk/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An API Wrapper Package for DAWA - The Danish Address Web API","text":"sure see getting started guide make maps {dawaR}.","code":""},{"path":"https://dawar.aleksanderbl.dk/index.html","id":"dawa-will-be-phased-out","dir":"","previous_headings":"","what":"DAWA will be phased out","title":"An API Wrapper Package for DAWA - The Danish Address Web API","text":"government entity maintains Danish Web Address API disclosed API phased point. time comes, package become deprecated another package ready provide functionality. service replace DAWA called Datafordeleren (Data Distribution) works. functionality relation Central Register Buildings (BBR) already moved new service. know read danish (use machine-translation) can keep date page. worries! sound like shutdown DAWA happen anytime soon without due notice. can read read history updates vignette(\"status\"). minor updates shown . Major ones page. communicated lifecycle functions.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/autocomplete.html","id":null,"dir":"Reference","previous_headings":"","what":"Base function for interacting with autocomplete of sections. — autocomplete","title":"Base function for interacting with autocomplete of sections. — autocomplete","text":"function handy needing either validate simply \"fill gaps\" autocompletion API.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/autocomplete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base function for interacting with autocomplete of sections. — autocomplete","text":"","code":"autocomplete(section, input, ...)"},{"path":"https://dawar.aleksanderbl.dk/reference/autocomplete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base function for interacting with autocomplete of sections. — autocomplete","text":"section Defines section api called. available_sections() exposes options parameter. input input autocomplete. name, place similar. ... <dynamic-dots> input query parameters.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/autocomplete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base function for interacting with autocomplete of sections. — autocomplete","text":"Returns autocomplete information provided section given input.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/autocomplete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base function for interacting with autocomplete of sections. — autocomplete","text":"","code":"autocomplete(\"regioner\", \"midt\") #> [[1]] #> [[1]]$tekst #> [1] \"1082 Region Midtjylland\" #>  #> [[1]]$region #> [[1]]$region$ændret #> [1] \"2024-10-11T21:03:05.131Z\" #>  #> [[1]]$region$geo_version #> [1] 43 #>  #> [[1]]$region$geo_ændret #> [1] \"2024-10-11T21:03:05.131Z\" #>  #> [[1]]$region$bbox #> [[1]]$region$bbox[[1]] #> [1] 8.078876 #>  #> [[1]]$region$bbox[[2]] #> [1] 55.64438 #>  #> [[1]]$region$bbox[[3]] #> [1] 11.66419 #>  #> [[1]]$region$bbox[[4]] #> [1] 56.84326 #>  #>  #> [[1]]$region$visueltcenter #> [[1]]$region$visueltcenter[[1]] #> [1] 9.605032 #>  #> [[1]]$region$visueltcenter[[2]] #> [1] 56.23399 #>  #>  #> [[1]]$region$dagi_id #> [1] \"389101\" #>  #> [[1]]$region$kode #> [1] \"1082\" #>  #> [[1]]$region$navn #> [1] \"Region Midtjylland\" #>  #> [[1]]$region$nuts2 #> [1] \"DK04\" #>  #> [[1]]$region$href #> [1] \"https://api.dataforsyningen.dk/regioner/1082\" #>  #>  #>"},{"path":"https://dawar.aleksanderbl.dk/reference/available_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"List of available sections for dawa() — available_sections","title":"List of available sections for dawa() — available_sections","text":"Simple function list available options section parameter dawa(). Useful getting know base api function package.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/available_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of available sections for dawa() — available_sections","text":"","code":"available_sections(as_list = FALSE, format = NULL, verbose = TRUE)"},{"path":"https://dawar.aleksanderbl.dk/reference/available_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of available sections for dawa() — available_sections","text":"as_list options controls output format. output either named list atomic vector available sections format Specify format type. function now returns available sections can respond format. Currently geojson format specified. verbose whether provide {cli} output user. Enabled default, disabled functions wrap function","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/available_sections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of available sections for dawa() — available_sections","text":"function returns either named list atomic vector available sections API. format decided as_list.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/available_sections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of available sections for dawa() — available_sections","text":"","code":"available_sections() #>  [1] \"adgangsadresser\"                   \"adresser\"                          #>  [3] \"afstemningsomraader\"               \"autocomplete\"                      #>  [5] \"bebyggelser\"                       \"bygninger\"                         #>  [7] \"ejerlav\"                           \"jordstykker\"                       #>  [9] \"kommuner\"                          \"landsdele\"                         #> [11] \"menighedsraadsafstemningsomraader\" \"navngivneveje\"                     #> [13] \"opstillingskredse\"                 \"politikredse\"                      #> [15] \"postnumre\"                         \"postnumre\"                         #> [17] \"regioner\"                          \"retskredse\"                        #> [19] \"sogne\"                             \"steder\"                            #> [21] \"stednavne2\"                        \"stednavntyper\"                     #> [23] \"storkredse\"                        \"supplerendebynavne2\"               #> [25] \"supplerendebynavne2\"               \"valglandsdele\"                     #> [27] \"vejnavne\"                          \"vejnavnpostnummerrelationer\"       #> [29] \"vejstykker\"                         available_sections(as_list = TRUE) #> $adresser #> [1] \"adgangsadresser\"             \"adresser\"                    #> [3] \"autocomplete\"                \"navngivneveje\"               #> [5] \"vejstykker\"                  \"vejnavne\"                    #> [7] \"vejnavnpostnummerrelationer\" \"supplerendebynavne2\"         #> [9] \"postnumre\"                   #>  #> $dagi #>  [1] \"afstemningsomraader\"               \"kommuner\"                          #>  [3] \"landsdele\"                         \"menighedsraadsafstemningsomraader\" #>  [5] \"opstillingskredse\"                 \"politikredse\"                      #>  [7] \"postnumre\"                         \"regioner\"                          #>  [9] \"retskredse\"                        \"sogne\"                             #> [11] \"storkredse\"                        \"supplerendebynavne2\"               #> [13] \"valglandsdele\"                     #>  #> $matrikelkortet #> [1] \"ejerlav\"     \"jordstykker\" #>  #> $stednavne #> [1] \"steder\"        \"stednavne2\"    \"stednavntyper\" \"bebyggelser\"   #>  #> $bygningspolygoner #> [1] \"bygninger\" #>"},{"path":"https://dawar.aleksanderbl.dk/reference/dawa.html","id":null,"dir":"Reference","previous_headings":"","what":"Base API function — dawa","title":"Base API function — dawa","text":"function foundation communication api package. intended end-users, provides flexibility api without nice conveniences functions package. default reformats api response (json) list object.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/dawa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base API function — dawa","text":"","code":"dawa(   section,   ...,   append_to_url = NULL,   format = NULL,   verbose = TRUE,   cache = TRUE,   dry_run = FALSE )"},{"path":"https://dawar.aleksanderbl.dk/reference/dawa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base API function — dawa","text":"section Defines section api called. available_sections() exposes options parameter. ... <dynamic-dots> input query parameters. append_to_url options enables append string url. inserted request section .... format format provide query parameter api call. default value NULL triggers default json formatting. geojson geojsonz provided, function return raw json data instead usual list. verbose whether provide {cli} output user. Enabled default, disabled functions wrap function cache Option use caching tempdir(). Enabled default. info can found documentation httr2::req_cache(). dry_run option enabled, function output request created - Without sending api. useful debugging.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/dawa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base API function — dawa","text":"default returns API response list output. geojson(z) formats returns raw json. dry_run = TRUE returns request created run .","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/dawa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base API function — dawa","text":"","code":"x <- dawa(section = \"sogne\") #> → Requesting `sogne` from DAWA #> ℹ Accessing <https://api.dataforsyningen.dk/sogne>  x[[1]] #> $ændret #> [1] \"2023-11-02T22:05:36.260Z\" #>  #> $geo_version #> [1] 6 #>  #> $geo_ændret #> [1] \"2023-11-02T22:05:36.260Z\" #>  #> $bbox #> $bbox[[1]] #> [1] 12.56343 #>  #> $bbox[[2]] #> [1] 55.66719 #>  #> $bbox[[3]] #> [1] 12.58534 #>  #> $bbox[[4]] #> [1] 55.68334 #>  #>  #> $visueltcenter #> $visueltcenter[[1]] #> [1] 12.57165 #>  #> $visueltcenter[[2]] #> [1] 55.67359 #>  #>  #> $dagi_id #> [1] \"107307\" #>  #> $kode #> [1] \"7002\" #>  #> $navn #> [1] \"Helligånds\" #>  #> $href #> [1] \"https://api.dataforsyningen.dk/sogne/7002\" #>"},{"path":"https://dawar.aleksanderbl.dk/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from section — get_data","title":"Get data from section — get_data","text":"Get data section","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from section — get_data","text":"","code":"get_data(section, as_list = FALSE)"},{"path":"https://dawar.aleksanderbl.dk/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from section — get_data","text":"section Defines section api called. available_sections() exposes options parameter. as_list Wether return data list dataframe. Data.frame default output.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data from section — get_data","text":"Returns either dataframe data specified section list information.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data from section — get_data","text":"","code":"x <- get_data(\"regioner\") head(x) #>   dagi_id kode               navn nuts2                   ændret #> 1  389098 1081 Region Nordjylland  DK05 2024-10-04T21:02:54.978Z #> 2  389101 1082 Region Midtjylland  DK04 2024-10-11T21:03:05.131Z #> 3  389102 1083  Region Syddanmark  DK03 2024-10-04T21:02:54.978Z #> 4  389099 1084 Region Hovedstaden  DK01 2024-10-04T21:02:54.978Z #> 5  389100 1085    Region Sjælland  DK02 2024-10-22T21:04:04.354Z #>                 geo_ændret geo_version bbox_xmin bbox_ymin bbox_xmax bbox_ymax #> 1 2024-10-04T21:02:54.978Z          32  8.189517  56.53455  11.22599  57.76025 #> 2 2024-10-11T21:03:05.131Z          43  8.078876  55.64438  11.66419  56.84326 #> 3 2024-10-04T21:02:54.978Z          32  8.063203  54.71828  10.99555  55.95325 #> 4 2024-10-04T21:02:54.978Z          31 11.602116  54.98355  15.31831  56.20520 #> 5 2024-10-22T21:04:04.354Z          29 10.814805  54.54441  12.64552  56.01731 #>   visueltcenter_x visueltcenter_y #> 1       10.112829        57.30716 #> 2        9.605032        56.23399 #> 3        9.028461        55.56317 #> 4       12.279374        55.97239 #> 5       11.621319        55.43979"},{"path":"https://dawar.aleksanderbl.dk/reference/get_map_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch map data to use with {sf}. — get_map_data","title":"Fetch map data to use with {sf}. — get_map_data","text":"function returns map data DAWA. ready use {sf} functions. returned dataframe date-time columns inform information last changed. returned Europe/Copenhagen time local time API. can change behavior setting Sys.setenv(TZ = \"/Timezone\").","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/get_map_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch map data to use with {sf}. — get_map_data","text":"","code":"get_map_data(type)"},{"path":"https://dawar.aleksanderbl.dk/reference/get_map_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch map data to use with {sf}. — get_map_data","text":"type Defines type map data request DAWA. Run available_sections(format = \"geojson\") options.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/get_map_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch map data to use with {sf}. — get_map_data","text":"Returns data.frame object contains polygons section provided.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/get_map_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch map data to use with {sf}. — get_map_data","text":"","code":"x <- get_map_data(\"regioner\") ggplot2::ggplot(x) +   ggplot2::geom_sf()"},{"path":"https://dawar.aleksanderbl.dk/reference/reverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Base function for interacting with reverse geocoding of sections. — reverse","title":"Base function for interacting with reverse geocoding of sections. — reverse","text":"function reverse geocodes coordinates provided. used box, function wants WGS84 coordinates (lat/long). ETRS89 UTM zone 32 can provided well. coordinates outside Denmark provided, function fail code 404.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/reverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base function for interacting with reverse geocoding of sections. — reverse","text":"","code":"reverse(section, x, y, verbose = TRUE, type = NULL, ...)"},{"path":"https://dawar.aleksanderbl.dk/reference/reverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base function for interacting with reverse geocoding of sections. — reverse","text":"section Defines section api called. available_sections() exposes options parameter. x X coordinate geocode. srid provided lattitude. y Y coordinate geocode. srid provided longitude. verbose whether provide {cli} output user. Enabled default, disabled functions wrap function type coordinate type API parse. default none provided WGS84 used. options ETRS89, UTM32 WGS84. functions checks input available types errs type allowed. ... <dynamic-dots> input query parameters.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/reverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base function for interacting with reverse geocoding of sections. — reverse","text":"Returns list object information provided section location input.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/reverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base function for interacting with reverse geocoding of sections. — reverse","text":"","code":"reverse(\"regioner\", x = 12.58515, y = 55.68324) #> → Requesting `regioner - reverse` from DAWA #> $ændret #> [1] \"2024-10-04T21:02:54.978Z\" #>  #> $geo_version #> [1] 31 #>  #> $geo_ændret #> [1] \"2024-10-04T21:02:54.978Z\" #>  #> $bbox #> $bbox[[1]] #> [1] 11.60212 #>  #> $bbox[[2]] #> [1] 54.98355 #>  #> $bbox[[3]] #> [1] 15.31831 #>  #> $bbox[[4]] #> [1] 56.2052 #>  #>  #> $visueltcenter #> $visueltcenter[[1]] #> [1] 12.27937 #>  #> $visueltcenter[[2]] #> [1] 55.97239 #>  #>  #> $dagi_id #> [1] \"389099\" #>  #> $kode #> [1] \"1084\" #>  #> $navn #> [1] \"Region Hovedstaden\" #>  #> $nuts2 #> [1] \"DK01\" #>  #> $href #> [1] \"https://api.dataforsyningen.dk/regioner/1084\" #>"},{"path":"https://dawar.aleksanderbl.dk/reference/status_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all DAWA services are operational — status_check","title":"Check that all DAWA services are operational — status_check","text":"function fetches status available SDFI services. API package wraps one . checks status url. status can also followed official X-page.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/status_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all DAWA services are operational — status_check","text":"","code":"status_check(return_df = FALSE, error_if_unavailable = FALSE)"},{"path":"https://dawar.aleksanderbl.dk/reference/status_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all DAWA services are operational — status_check","text":"return_df option makes function return dataframe object services statuses listed error_if_unavailable option forces function throw error event one services unreachable.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/status_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that all DAWA services are operational — status_check","text":"Returns data frame object services statuses. returned return_df = TRUE.","code":""},{"path":"https://dawar.aleksanderbl.dk/reference/status_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that all DAWA services are operational — status_check","text":"","code":"status_check() #> ✔ All systems are operational  status_check(return_df = TRUE) #> ✔ All systems are operational #>              service status #> 1           Adresser     OK #> 2         Arkiv kort     OK #> 3 Dataforsyningen.dk     OK #> 4               FTPS     OK #> 5            Gsearch     OK #> 6 WMS - forvaltning2     OK #> 7        sdfekort.dk     OK"},{"path":"https://dawar.aleksanderbl.dk/news/index.html","id":"dawar-010-2024-09-16","dir":"Changelog","previous_headings":"","what":"dawaR 0.1.0 (2024-09-16)","title":"dawaR 0.1.0 (2024-09-16)","text":"Initial CRAN submission. dawa() reverse() autocomplete() get_data() get_map_data() available_sections() status_check()","code":""}]
